// Imperative
1 + 2 * (3 - 4)
def fact(n) { if (n <=1) 1 else n + fact (n-1)}
fact(100)

// Scheme
(+ (+ (+ 1 1) (+ 2 2)) (+ (+ 3 3)  (+ 4 4)) )
(if (< 3 4) (+ 5 6) (- 7 8))
(begin (define x 30) (define y x) (+ y 3))
(define add (lambda a (+ 1 a)))

(define fact (lambda (n) (if (<= n 1) 1 (+ n (fact (- n 1))))))
(define x (fact 10))
(+ x 100)

(+ 1 (callcc (lambda (a) (begin (a 3) (+ 1 2)))))
(+ 1 (callcc (lambda (a) (if (< 1 2) (begin (+ 1 1)  (a 6)) (+ 1 1)))))